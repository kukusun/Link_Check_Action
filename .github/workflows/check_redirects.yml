name: Check Redirects

on:
  schedule:
    - cron: '0 19 * * *'  # 每天中国上海时间晚上3点运行一次
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Run redirect checker
      run: |
        python check_redirects.py

    - name: Check if results file is empty
      id: check_results
      run: |
        if [ ! -s check_results.md ]; then
          echo "results_empty=true" >> $GITHUB_ENV
        else
          echo "results_empty=false" >> $GITHUB_ENV
        fi

    - name: Set DATE environment variable
      run: echo "DATE=$(TZ='Asia/Shanghai' date +'%Y年%m月%d日%H时%M分')" >> $GITHUB_ENV
      
    - name: Commit results
      if: env.results_empty == 'false'
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          FILENAME="results/[Manual]check_results_$DATE.md"
        else
          FILENAME="results/[Actions]check_results_$DATE.md"
        fi
        mv check_results.md $FILENAME
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add $FILENAME
        git commit -m "Update check results for $DATE"
        git push
      env: 
        DATE: ${{ env.DATE }}

    - name: Install Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install nodemailer
      run: npm install nodemailer

    - name: Send email with results
      if: env.results_empty == 'false'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const nodemailer = require('nodemailer');
          
          // 动态生成文件名
          const date = process.env.DATE;
          const fileName = process.env.GITHUB_EVENT_NAME === 'workflow_dispatch' ? `results/[Manual]check_results_${date}.md` : `results/[Actions]check_results_${date}.md`;
          console.log('File Name:', fileName);
          
          // 读取文件内容
          const results = fs.readFileSync(fileName, 'utf8');
          
          let transporter = nodemailer.createTransport({
            host: 'smtp.gmail.com',
            port: 587,
            secure: false,
            auth: {
              user: process.env.EMAIL_USER,
              pass: process.env.EMAIL_PASSWORD
            }
          });

          let mailOptions = {
            from: process.env.EMAIL_USER,
            to: 'kukusun@outlook.com',
            subject: '链接检测结果：${fileName}',
            text: results
          };

          transporter.sendMail(mailOptions, function(error, info){
            if (error) {
              console.log(error);
            } else {
              console.log('Email sent: ' + info.response);
            }
          });
      env:
        EMAIL_USER: ${{ secrets.EMAIL_USER }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
        DATE: ${{ env.DATE }}
